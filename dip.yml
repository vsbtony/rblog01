version: '7.1'

# Define default environment variables to pass
# to Docker Compose
environment:
  RUBY_VERSION: '3.1.2'
  DISTRO_NAME: 'bullseye'  
  NODE_MAJOR: '18'
  YARN_VERSION: '1.22.19'

  RAILS_ENV: development
  RAILS_IMAGE_ENV: dev

  APP_NAME: 'intro01'
  PROJECT_NAME: 'intro01'

compose:
  files:
    - .dockerdev/docker-compose.yaml
  project_name: ${PROJECT_NAME}

interaction:
  # This command spins up a Rails container with the required dependencies (such as databases),
  # and opens a terminal within it.
  runner:
    description: Open a Bash shell within a Rails container (with dependencies up)
    service: rails
    command: /bin/bash

  # Run a Rails container without any dependent services (useful for non-Rails scripts)
  bash:
    description: Run an arbitrary script within a Rails container (or open a shell without deps)
    service: rails
    command: /bin/bash
    compose_run_options: [ no-deps ]

  # Run a bin/dev development Rails container 
  dev:
    description: Run Rails bin/dev server at http://localhost:3000
    service: rdev
    compose:
      run_options: [service-ports, use-aliases]    

  # A shortcut to run Bundler commands
  bundle:
    description: Run Bundler commands
    service: rails
    command: bundle
    compose_run_options: [ no-deps ]

  # A shortcut to run RSpec (which overrides the RAILS_ENV)
  rspec:
    description: Run RSpec commands
    service: rails
    environment:
      RAILS_ENV: test
    command: bundle exec rspec

  rails:
    description: Run Rails commands
    service: rails
    command: bundle exec rails
    subcommands:
      s:
        description: Run Rails server at http://localhost:3000
        service: web
        compose:
          run_options: [service-ports, use-aliases]

  yarn:
    description: Run Yarn commands
    service: rails
    command: yarn
    compose_run_options: [ no-deps ]

  ruby:
    description: Open Ruby service terminal
    service: ruby
    command: /bin/bash
    subcommands:
      server:
        description: Open Ruby service terminal with ports exposed (9292 -> 19292, 3000 -> 13000, 8080 -> 18080)
        compose:
          run_options: [service-ports]

  mongo:
    description: Run mongodb console
    service: mongo
    command: mongosh --host mongo test 
    subcommands:
      bash:
        description: Open bash on MongoDB server 
        command: bash

  # Current flavor of Redis
  redis-cli:
    description: Run Redis console
    service: redis
    command: redis-cli -h redis

provision:
  - dip compose down --volumes
  - dip compose up -d redis
  - dip compose up -d mongo
  - dip bash -c bin/setup
  - dip rails db:reset

